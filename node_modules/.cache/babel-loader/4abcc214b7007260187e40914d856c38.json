{"ast":null,"code":"import { ADD_CONTACT, EDIT_CONTACT, FETCH_CONTACT, REMOVE_CONTACT } from \"../const\";\nconst initialState = {\n  contacts: [],\n  showSpinner\n};\n\nconst contactReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_CONTACT:\n      {\n        return {\n          contacts: action.payload\n        };\n      }\n\n    case ADD_CONTACT:\n      return {\n        contacts: state.contacts.concat(action.payload)\n      };\n\n    case REMOVE_CONTACT:\n      return {\n        contacts: state.contacts.filter(cont => cont.id !== action.payload)\n      };\n\n    case EDIT_CONTACT:\n      let allContact = [...state.contacts];\n      allContact[action.payload.id - 1] = action.payload;\n      return {\n        contacts: allContact\n      };\n\n    default:\n      return {\n        contacts: state.contacts\n      };\n  }\n};\n\nexport default contactReducer;","map":{"version":3,"sources":["D:/Projects/ConatactAppType/contact_app_redux/src/Component/Redux/Reducer/contactReducer.js"],"names":["ADD_CONTACT","EDIT_CONTACT","FETCH_CONTACT","REMOVE_CONTACT","initialState","contacts","showSpinner","contactReducer","state","action","type","payload","concat","filter","cont","id","allContact"],"mappings":"AAAA,SACEA,WADF,EAEEC,YAFF,EAGEC,aAHF,EAIEC,cAJF,QAKO,UALP;AAOA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA;AAFmB,CAArB;;AAIA,MAAMC,cAAc,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,aAAL;AAAoB;AAClB,eAAO;AACLG,UAAAA,QAAQ,EAAEI,MAAM,CAACE;AADZ,SAAP;AAGD;;AACD,SAAKX,WAAL;AACE,aAAO;AACLK,QAAAA,QAAQ,EAAEG,KAAK,CAACH,QAAN,CAAeO,MAAf,CAAsBH,MAAM,CAACE,OAA7B;AADL,OAAP;;AAIF,SAAKR,cAAL;AACE,aAAO;AACLE,QAAAA,QAAQ,EAAEG,KAAK,CAACH,QAAN,CAAeQ,MAAf,CAAuBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACE,OAAnD;AADL,OAAP;;AAGF,SAAKV,YAAL;AACE,UAAIe,UAAU,GAAG,CAAC,GAAGR,KAAK,CAACH,QAAV,CAAjB;AACAW,MAAAA,UAAU,CAACP,MAAM,CAACE,OAAP,CAAeI,EAAf,GAAoB,CAArB,CAAV,GAAoCN,MAAM,CAACE,OAA3C;AACA,aAAO;AACLN,QAAAA,QAAQ,EAAEW;AADL,OAAP;;AAIF;AACE,aAAO;AACLX,QAAAA,QAAQ,EAAEG,KAAK,CAACH;AADX,OAAP;AAvBJ;AA2BD,CA5BD;;AA6BA,eAAeE,cAAf","sourcesContent":["import {\r\n  ADD_CONTACT,\r\n  EDIT_CONTACT,\r\n  FETCH_CONTACT,\r\n  REMOVE_CONTACT,\r\n} from \"../const\";\r\n\r\nconst initialState = {\r\n  contacts: [],\r\n  showSpinner\r\n};\r\nconst contactReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_CONTACT: {\r\n      return {\r\n        contacts: action.payload,\r\n      };\r\n    }\r\n    case ADD_CONTACT:\r\n      return {\r\n        contacts: state.contacts.concat(action.payload),\r\n      };\r\n\r\n    case REMOVE_CONTACT:\r\n      return {\r\n        contacts: state.contacts.filter((cont) => cont.id !== action.payload),\r\n      };\r\n    case EDIT_CONTACT:\r\n      let allContact = [...state.contacts];\r\n      allContact[action.payload.id - 1] = action.payload;\r\n      return {\r\n        contacts: allContact,\r\n      };\r\n\r\n    default:\r\n      return {\r\n        contacts: state.contacts,\r\n      };\r\n  }\r\n};\r\nexport default contactReducer;\r\n"]},"metadata":{},"sourceType":"module"}